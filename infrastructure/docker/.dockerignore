# =============================================================================
# Node.js Tutorial HTTP Server - Docker Build Context Exclusion Configuration
# =============================================================================
# 
# This .dockerignore file optimizes Docker build context by excluding unnecessary files,
# development dependencies, testing artifacts, and sensitive configuration files from
# container image builds. Designed for the Node.js tutorial HTTP server application
# that demonstrates fundamental web server concepts through a simple '/hello' endpoint.
#
# Educational Purpose: This file demonstrates Docker build context optimization best
# practices, security considerations for container image builds, separation of
# development vs production file requirements, and container image size reduction
# strategies while maintaining focus on Node.js HTTP server fundamentals.
#
# Build Context: ../../ (project root)
# Essential Files: src/backend/server.js, src/backend/package.json, src/backend/lib/,
#                 src/backend/scripts/start.js, src/backend/scripts/health-check.js
# 
# =============================================================================

# -----------------------------------------------------------------------------
# NODE.JS DEPENDENCIES AND PACKAGE MANAGER ARTIFACTS
# -----------------------------------------------------------------------------
# Excludes Node.js package dependencies and package manager artifacts from Docker
# build context. Dependencies should be installed fresh in container builds via
# npm install commands in Dockerfile, not copied from local development environment.

node_modules/                   # All installed dependencies - will be installed fresh in container
npm-debug.log*                  # NPM debug logs from failed installations
yarn-debug.log*                 # Yarn debug logs and error information
yarn-error.log*                 # Yarn specific error logs
lerna-debug.log*                # Lerna monorepo debug logs

# Package Manager Cache and Temporary Files
.npm/                           # NPM local cache directory
.yarn/                          # Yarn cache and configuration
.pnpm/                          # PNPM cache directory
.yarn-integrity                 # Yarn integrity verification file

# Package Manager Lock Files (Install Fresh in Container)
package-lock.json               # NPM lock file - regenerated during container build
yarn.lock                       # Yarn lock file - regenerated during container build
pnpm-lock.yaml                  # PNPM lock file - regenerated during container build

# Package Manager Configuration Files
.npmrc                          # NPM configuration file
.yarnrc*                        # Yarn configuration files
.pnpmrc                         # PNPM configuration file

# Distribution Packages
*.tgz                           # Tar gzip packages
*.tar.gz                        # Compressed package archives

# -----------------------------------------------------------------------------
# TESTING ARTIFACTS AND COVERAGE REPORTS
# -----------------------------------------------------------------------------
# Excludes test coverage reports, testing output files, and test-related artifacts
# from container builds. Testing is a development activity and test artifacts
# should not be included in production container images.

# Test Directories and Files
__tests__/                      # Jest test directory
test/                           # Generic test directory
tests/                          # Alternative test directory
spec/                           # Spec test directory
*.test.js                       # Individual test files
*.spec.js                       # Individual spec files

# Test Coverage Reports
coverage/                       # Test coverage reports directory
.coverage/                      # Alternative coverage directory
*.lcov                          # Coverage data in LCOV format
.nyc_output/                    # NYC (Istanbul) coverage tool output

# Test Results and Reports
test-results/                   # Test execution results
junit.xml                       # JUnit XML test reports
junit-report.xml                # Alternative JUnit report naming
test-report.html                # HTML test reports
coverage-report/                # Coverage report directory

# Test Configuration Files
jest.config.js                  # Jest testing framework configuration
.eslintcache                    # ESLint cache for faster linting
.stylelintcache                 # Stylelint cache for CSS linting
nodemon.json                    # Nodemon configuration for development

# -----------------------------------------------------------------------------
# ENVIRONMENT VARIABLES AND SENSITIVE CONFIGURATION FILES
# -----------------------------------------------------------------------------
# Excludes environment variable files and sensitive configuration from container
# builds. Environment variables should be injected at runtime via Docker run
# commands, docker-compose, or Kubernetes secrets, not baked into images.

# Environment Configuration Files
.env*                           # All environment variable files
.environment                    # Alternative environment file naming
config.local.js                 # Local configuration overrides
settings.local.json             # Local settings overrides

# Sensitive Files and Credentials
.secrets/                       # Directory containing secrets
secrets/                        # Alternative secrets directory
.credentials                    # Credentials file
*.pem                           # Privacy Enhanced Mail certificate files
*.key                           # Private key files
*.crt                           # Certificate files
*.p12                           # PKCS#12 certificate files

# SSH and Authentication
.ssh/                           # SSH directory with keys
.gnupg/                         # GNU Privacy Guard directory
.aws/                           # AWS credentials directory

# Docker Configuration Files
docker-compose.override.yml      # Docker Compose override files
docker-compose.*.yml            # Environment-specific Docker Compose files

# -----------------------------------------------------------------------------
# DEVELOPMENT TOOLS AND IDE CONFIGURATION FILES
# -----------------------------------------------------------------------------
# Excludes development environment specific files, IDE configurations, and
# temporary development artifacts. IDE configurations are developer-specific
# and should not be included in containerized applications.

# Visual Studio Code
.vscode/                        # VS Code workspace settings directory

# JetBrains IDEs (IntelliJ, WebStorm, etc.)
.idea/                          # JetBrains IDE configuration directory
*.iws                           # IntelliJ workspace files
*.iml                           # IntelliJ module files
*.ipr                           # IntelliJ project files

# Sublime Text Editor
*.swp                           # Vim swap files
*.swo                           # Vim swap files (backup)
*~                              # Backup files created by editors
*.sublime-project               # Sublime Text project files
*.sublime-workspace             # Sublime Text workspace files

# Other Editors and Development Tools
.vim/                           # Vim configuration directory
.emacs.d/                       # Emacs configuration directory
.atom/                          # Atom editor configuration
nbproject/                      # NetBeans project directory
.project                        # Eclipse project file
.classpath                      # Eclipse classpath configuration
.settings/                      # Eclipse settings directory

# Build Tools (Not Needed in Container)
.gradle/                        # Gradle build tool directory
.mvn/                           # Maven wrapper directory
mvnw*                           # Maven wrapper scripts
gradlew*                        # Gradle wrapper scripts

# -----------------------------------------------------------------------------
# BUILD ARTIFACTS AND DISTRIBUTION FILES
# -----------------------------------------------------------------------------
# Excludes build outputs, compiled assets, and distribution packages that are
# generated during container build process or should be built fresh in container.

# Build Output Directories
dist/                           # Distribution/build output directory
build/                          # Build output directory
out/                            # Output directory for compiled assets
lib/                            # Library build directory (exclude to rebuild fresh)
bin/                            # Binary output directory
target/                         # Maven target directory
release/                        # Release build directory
deploy/                         # Deployment build directory

# Web Build Artifacts
public/build/                   # Public build assets
static/build/                   # Static build assets
.next/                          # Next.js build directory
.nuxt/                          # Nuxt.js build directory
.docusaurus/                    # Docusaurus build directory

# Documentation Build
site/                           # Documentation site build
book/                           # GitBook build directory
_site/                          # Jekyll site build
gh-pages/                       # GitHub Pages build

# -----------------------------------------------------------------------------
# LOGS, RUNTIME DATA, AND TEMPORARY FILES
# -----------------------------------------------------------------------------
# Excludes log files, runtime process data, and temporary files that accumulate
# during development. Container images should start clean without local logs.

# Application Log Directories
logs/                           # Application logs directory
*.log                           # All log files
log/                            # Alternative log directory
log-*.txt                       # Timestamped log files

# Process and Runtime Files
*.pid                           # Process ID files
*.seed                          # Seed files for random generators
*.pid.lock                      # Process ID lock files
pids/                           # Process IDs directory
runtime/                        # Runtime data directory

# Temporary Files and Directories
tmp/                            # Temporary directory
.tmp/                           # Hidden temporary directory
*.tmp                           # Temporary files
*.temp                          # Alternative temporary files
.temp/                          # Temporary directory
*.dump                          # Memory dump files
*.trace                         # Trace files
*.map                           # Source map files

# Cache Directories
.cache/                         # General cache directory
*.cache                         # Cache files
.sass-cache/                    # Sass preprocessing cache

# -----------------------------------------------------------------------------
# INFRASTRUCTURE AND DEPLOYMENT FILES
# -----------------------------------------------------------------------------
# Excludes infrastructure configuration, deployment scripts, and CI/CD files
# that are used for building and deploying containers but not needed inside
# the running container runtime environment.

# Infrastructure Configuration
infrastructure/                 # Infrastructure as Code directory
k8s/                            # Kubernetes configuration files
kubernetes/                     # Alternative Kubernetes directory
helm/                           # Helm charts directory
terraform/                      # Terraform configuration files
.terraform/                     # Terraform working directory
terraform.tfstate*              # Terraform state files
terraform.tfvars                # Terraform variable files
ansible/                        # Ansible playbooks directory
playbooks/                      # Ansible playbooks

# CI/CD Configuration Files
.github/                        # GitHub Actions and configuration
.gitlab-ci.yml                  # GitLab CI configuration
.travis.yml                     # Travis CI configuration
circle.yml                      # CircleCI configuration
appveyor.yml                    # AppVeyor CI configuration
azure-pipelines.yml             # Azure Pipelines configuration
Jenkinsfile                     # Jenkins pipeline configuration

# Container and Orchestration Files
docker-compose*.yml             # Docker Compose files
Dockerfile*                     # Dockerfile variants
.dockerignore                   # This file itself
Vagrantfile                     # Vagrant configuration
.vagrant/                       # Vagrant working directory

# -----------------------------------------------------------------------------
# DOCUMENTATION AND TUTORIAL MATERIALS
# -----------------------------------------------------------------------------
# Excludes documentation files, tutorial materials, and educational content
# that are useful for developers but not needed in production container runtime.

# Documentation Directories
docs/                           # Documentation directory
documentation/                  # Alternative documentation directory
tutorial-screenshots/           # Tutorial screenshot images
examples/                       # Code examples directory
samples/                        # Sample files directory

# Documentation Files
README*                         # README files
CHANGELOG*                      # Changelog files
LICENSE*                        # License files
CONTRIBUTING*                   # Contributing guidelines
CODE_OF_CONDUCT*               # Code of conduct files
SECURITY*                       # Security policy files
*.md                            # Markdown documentation files
*.txt                           # Text documentation files
*.rst                           # reStructuredText files
*.pdf                           # PDF documentation files

# -----------------------------------------------------------------------------
# VERSION CONTROL AND SOURCE CONTROL METADATA
# -----------------------------------------------------------------------------
# Excludes version control metadata, Git history, and source control artifacts
# from container images. Version control history is not needed in containers.

# Git Version Control
.git/                           # Git repository directory
.gitignore                      # Git ignore configuration
.gitattributes                  # Git attributes configuration
.gitmodules                     # Git submodules configuration
.gitkeep                        # Git keep file for empty directories

# Other Version Control Systems
.svn/                           # Subversion directory
.hg/                            # Mercurial directory
.bzr/                           # Bazaar directory
CVS/                            # CVS directory
.cvs*                           # CVS files

# -----------------------------------------------------------------------------
# OPERATING SYSTEM GENERATED FILES
# -----------------------------------------------------------------------------
# Excludes operating system specific files, thumbnails, and system metadata
# that should not be included in cross-platform container images.

# macOS System Files
.DS_Store                       # macOS directory services store
.DS_Store?                      # macOS directory services store backup
._*                             # macOS resource forks and metadata
.Spotlight-V100                 # macOS Spotlight index files
.Trashes                        # macOS trash folder metadata
.AppleDouble                    # AppleDouble encoded Macintosh files
.LSOverride                     # macOS Launch Services override
Icon?                           # macOS custom folder icons

# Windows System Files
ehthumbs.db                     # Windows Explorer thumbnail cache
Thumbs.db                       # Windows image thumbnail cache
Desktop.ini                     # Windows folder customization file
$RECYCLE.BIN/                   # Windows Recycle Bin folder
*.lnk                           # Windows shortcut files

# Linux System Files
.directory                      # KDE directory configuration
.fuse_hidden*                   # FUSE filesystem hidden files
.Trash-*                        # Linux trash directories
.nfs*                           # NFS temporary files

# -----------------------------------------------------------------------------
# EDUCATIONAL AND LEARNING ARTIFACTS
# -----------------------------------------------------------------------------
# Excludes educational artifacts, student work, and learning progress files
# that are specific to individual learners and should not be in containers.

# Student Work and Progress
student-work/                   # Individual student work directory
exercises/*/solutions/          # Exercise solution directories
learning-notes/                 # Personal learning notes directory
tutorial-progress/              # Tutorial progress tracking
workshop-*/                     # Workshop session directories

# Tutorial Backup Files
*.tutorial.bak                  # Tutorial backup files
tutorial-backup-*               # Timestamped tutorial backups
student-notes.md                # Individual student notes
learning-progress.json          # Student progress tracking file
exercise-*.bak                  # Exercise backup files

# Learning Environment Files
.repl_history                   # Node.js REPL history file
tutorial-experiments/           # Student experimentation directory
practice-files/                 # Practice implementation files
draft-solutions/                # Draft solution files

# -----------------------------------------------------------------------------
# ARCHIVE AND COMPRESSED FILES
# -----------------------------------------------------------------------------
# Excludes compressed archives and binary distribution files that are not
# part of the source code and can be large files unsuitable for containers.

*.7z                            # 7-Zip archives
*.dmg                           # macOS disk images
*.gz                            # Gzip compressed files
*.iso                           # ISO disk images
*.jar                           # Java archive files
*.rar                           # RAR archives
*.tar                           # Tar archives
*.zip                           # ZIP archives
*.bz2                           # Bzip2 compressed files
*.xz                            # XZ compressed files

# -----------------------------------------------------------------------------
# PERSONAL DOCUMENTATION AND NOTES
# -----------------------------------------------------------------------------
# Excludes personal documentation, notes, and draft files that are not
# relevant to the containerized application.

notes/                          # Personal notes directory
personal-notes/                 # Personal notes directory
README-personal.md              # Personal readme files
TODO-personal.md                # Personal todo files
NOTES.md                        # General notes file
scratch.md                      # Scratch pad files
draft-*                         # Draft documents
*.draft                         # Files marked as drafts
research/                       # Research materials directory
references/                     # Reference materials directory

# -----------------------------------------------------------------------------
# PERFORMANCE MONITORING AND PROFILING DATA
# -----------------------------------------------------------------------------
# Excludes performance monitoring artifacts and profiling data generated
# during development that should not be included in container images.

# Memory and CPU Profiling
*.heapsnapshot                  # V8 heap snapshots
*.cpuprofile                    # CPU profiling data
heapdump-*                      # Heap dump files

# Performance Analysis
*.trace                         # Trace files
profile-*                       # Profiling output files
benchmark-results/              # Benchmark test results

# Monitoring Data
metrics/                        # Application metrics data
performance-logs/               # Performance-specific logs
grafana-data/                   # Grafana dashboard data
prometheus-data/                # Prometheus metrics data

# -----------------------------------------------------------------------------
# DEVELOPMENT DEBUGGING ARTIFACTS
# -----------------------------------------------------------------------------
# Excludes debugging output, development logs, and diagnostic files created
# during development sessions.

debug.log                       # Debug log files
debug-output-*                  # Debug output files
*.orig                          # Git merge conflict originals
*.rej                           # Git patch rejection files
*.patch                         # Patch files

# -----------------------------------------------------------------------------
# END OF DOCKERIGNORE CONFIGURATION
# -----------------------------------------------------------------------------
#
# Container Build Optimization Benefits:
# 1. Significantly reduces Docker build context size for faster builds
# 2. Improves Docker layer caching by excluding frequently changing files
# 3. Enhances security by preventing sensitive files from entering images
# 4. Reduces final container image size for efficient deployment
# 5. Prevents development artifacts from affecting production containers
#
# Essential Files Included in Container:
# - src/backend/server.js (main application entry point)
# - src/backend/package.json (dependency specification)
# - src/backend/lib/ (application modules and utilities)
# - src/backend/scripts/start.js (production startup script)
# - src/backend/scripts/health-check.js (health monitoring)
#
# Build Command Integration:
# docker build -f infrastructure/docker/Dockerfile.backend -t nodejs-tutorial/backend .
#
# Educational Value:
# - Demonstrates Docker build context optimization best practices
# - Shows security considerations for container image builds
# - Illustrates separation of development vs production file requirements
# - Teaches container image size reduction strategies
# - Provides examples of professional container deployment practices
#
# =============================================================================