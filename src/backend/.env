# =============================================================================
# Node.js Tutorial HTTP Server - Environment Configuration
# =============================================================================
# This file contains runtime environment variables for the Node.js tutorial
# application. It demonstrates environment-based configuration management and
# separation of configuration from application code. The file is automatically
# loaded by Node.js process.env at application startup.
#
# Educational Purpose:
# - Shows environment variable patterns in Node.js applications
# - Demonstrates configuration management best practices
# - Illustrates secure development environment setup
# - Teaches flexible application configuration techniques
#
# Security Note:
# This file contains no sensitive information and demonstrates configuration
# patterns only. In production, this file should be added to .gitignore to
# prevent committing environment-specific values.
# =============================================================================

# -----------------------------------------------------------------------------
# APPLICATION ENVIRONMENT MODE
# -----------------------------------------------------------------------------
# Controls application behavior, optimization, and logging verbosity
# Valid values: development, production, test, educational
# Educational Impact: Controls logging verbosity and debugging features for
# optimal learning experience. Development mode enables detailed HTTP processing
# logs and educational guidance messages.
NODE_ENV=development

# -----------------------------------------------------------------------------
# HTTP SERVER CONFIGURATION
# -----------------------------------------------------------------------------
# Network binding and port configuration for the HTTP server instance
# These settings control how the server connects to the network interface

# HTTP server port number for network binding
# Valid range: 1024-65535 (non-privileged ports recommended)
# Educational Impact: Allows port customization for multi-user development
# environments and demonstrates port conflict resolution strategies
PORT=3000

# HTTP server hostname/IP address binding
# Educational Security: Restricted to localhost binding only (127.0.0.1)
# Valid values: localhost, 127.0.0.1, or ::1 for educational security
# Educational Impact: Demonstrates network security through localhost-only
# binding while showing IPv4 configuration concepts
HOST=127.0.0.1

# -----------------------------------------------------------------------------
# LOGGING CONFIGURATION
# -----------------------------------------------------------------------------
# Controls logging verbosity and educational message display

# Logging verbosity level for application messages
# Valid levels: debug, info, warn, error
# Educational Impact: Controls learning visibility with 'debug' showing
# detailed HTTP processing steps, 'info' displaying standard operations,
# and higher levels filtering educational guidance messages
LOG_LEVEL=info

# -----------------------------------------------------------------------------
# TIMEOUT CONFIGURATION
# -----------------------------------------------------------------------------
# HTTP server timeout settings for connection management and performance
# All timeout values are specified in milliseconds

# HTTP server request timeout for managing connection lifecycle
# Valid range: 5000-120000 milliseconds (5-120 seconds)
# Educational Impact: Demonstrates server timeout configuration and connection
# management patterns for robust server operation and resource protection
SERVER_TIMEOUT=30000

# HTTP keep-alive connection timeout for connection reuse optimization
# Valid range: 1000-60000 milliseconds (1-60 seconds)
# Educational Impact: Shows HTTP connection optimization and performance tuning
# concepts, illustrating how persistent connections improve efficiency while
# preventing resource exhaustion from idle connections
KEEP_ALIVE_TIMEOUT=5000

# Individual HTTP request processing timeout
# Valid range: 1000-60000 milliseconds (1-60 seconds)
# Educational Impact: Demonstrates individual request timeout management and
# server resource protection patterns, showing how to prevent slow requests
# from consuming server resources indefinitely
REQUEST_TIMEOUT=10000

# -----------------------------------------------------------------------------
# EDUCATIONAL FEATURES
# -----------------------------------------------------------------------------
# Tutorial-specific configuration for enhanced learning experience

# Enables comprehensive educational features and learning assistance
# Valid values: true, false (as strings)
# Educational Impact: Activates tutorial-specific features including:
# - Enhanced startup banner with configuration display
# - Verbose logging with educational context
# - Troubleshooting guidance for common issues
# - Learning-focused error messages and suggestions
# - Step-by-step operation explanations in console output
EDUCATIONAL_MODE=true

# =============================================================================
# CONFIGURATION NOTES
# =============================================================================
# 
# Loading Mechanism:
# - Automatically loaded by Node.js process.env at application startup
# - No additional libraries required, uses native Node.js capabilities
# 
# Precedence Order:
# - Environment variables override configuration file defaults
# - Command line arguments take highest precedence (not used in tutorial)
# 
# Validation Handling:
# - Invalid values generate educational warnings in console
# - Application falls back to safe defaults with guidance messages
# - Configuration validation occurs during application initialization
# 
# Runtime Behavior:
# - Changes require server restart to take effect
# - Current configuration displayed in startup banner for transparency
# - Configuration issues include educational resolution guidance
# 
# Development Workflow:
# - Customize values for specific development environment needs
# - Port changes when default 3000 is unavailable
# - Log level adjustment for debugging (debug) or production (error)
# - Timeout adjustments for slower development machines
# - Educational mode toggling for different learning contexts
# 
# Integration Points:
# - app-config.js: Reads all variables for unified application configuration
# - server-config.js: Uses PORT, HOST, and timeout variables for server setup
# - logger.js: Uses LOG_LEVEL and EDUCATIONAL_MODE for logging configuration
# - server.js: Accesses configuration through config modules for bootstrap
# =============================================================================