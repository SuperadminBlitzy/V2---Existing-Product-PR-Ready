# =============================================================================
# Node.js Tutorial HTTP Server - Root Git Ignore Configuration
# =============================================================================
# 
# This is the root .gitignore for Node.js Tutorial HTTP Server project.
# Coordinates with src/backend/.gitignore and infrastructure-specific patterns.
# Focuses on project-wide exclusions and educational environment support.
# 
# Educational Purpose: Demonstrates comprehensive project-wide gitignore strategy,
# coordination between multiple gitignore files, cross-platform development
# considerations, and security-conscious version control practices.
# 
# Project Structure:
# - Root patterns (this file): Project-wide, OS, IDE, infrastructure artifacts
# - Backend patterns (src/backend/.gitignore): Node.js specific exclusions  
# - Coverage patterns (src/backend/coverage/.gitignore): Test coverage reports
# 
# =============================================================================

# -----------------------------------------------------------------------------
# OPERATING SYSTEM GENERATED FILES
# -----------------------------------------------------------------------------
# Excludes operating system generated files and directory metadata across
# Windows, macOS, and Linux development environments. These files are not
# relevant to the application and vary between development platforms.

# macOS System Files
.DS_Store                       # macOS directory services store
.DS_Store?                      # macOS directory services store backup
._*                            # macOS resource forks
.Spotlight-V100                # macOS Spotlight index files
.Trashes                       # macOS trash folder metadata
.AppleDouble                   # AppleDouble encoded Macintosh files
.LSOverride                    # macOS Launch Services override

# Windows System Files  
ehthumbs.db                    # Windows Explorer thumbnail cache
Thumbs.db                      # Windows image thumbnail cache
desktop.ini                    # Windows folder customization file
$RECYCLE.BIN/                  # Windows Recycle Bin folder
*.lnk                          # Windows shortcut files

# Linux System Files
.fuse_hidden*                  # FUSE filesystem hidden files
.directory                     # KDE directory configuration
.Trash-*                       # Linux trash directories
.nfs*                          # NFS temporary files

# -----------------------------------------------------------------------------
# IDE AND EDITOR CONFIGURATION FILES
# -----------------------------------------------------------------------------
# Excludes IDE and editor-specific configuration files and temporary editing
# artifacts. IDE configurations are developer-specific and should not be
# shared in educational environments to maintain setup flexibility.

# Visual Studio Code
.vscode/                       # VS Code workspace settings
!.vscode/settings.json.example # Keep example settings for tutorials
!.vscode/launch.json.example   # Keep example debug configuration
!.vscode/tasks.json.example    # Keep example task configuration

# JetBrains IDEs (IntelliJ, WebStorm, etc.)
.idea/                         # JetBrains IDE configuration
*.iws                          # IntelliJ workspace files
*.iml                          # IntelliJ module files
*.ipr                          # IntelliJ project files

# Sublime Text
*.sublime-workspace            # Sublime Text workspace
*.sublime-project              # Sublime Text project files

# Eclipse
.project                       # Eclipse project file
.settings/                     # Eclipse settings directory
.classpath                     # Eclipse classpath configuration

# Vim/Neovim
*.swp                          # Vim swap files
*.swo                          # Vim swap files (backup)
*~                            # Vim backup files
.vim/                         # Vim configuration directory
Session.vim                    # Vim session files

# Emacs
.emacs.d/                     # Emacs configuration directory
*~                            # Emacs backup files
.#*                           # Emacs lock files

# Other Editors
tags                          # ctags files
TAGS                          # etags files
.tern-port                    # Tern.js port file
.eslintcache                  # ESLint cache (if at root level)

# -----------------------------------------------------------------------------
# TEMPORARY AND BACKUP FILES
# -----------------------------------------------------------------------------
# Excludes temporary files, backup files, and cache directories created during
# development. These are development artifacts that should not be version
# controlled as they're environment-specific and regenerable.

*.tmp                         # Temporary files
*.temp                        # Temporary files
*.bak                         # Backup files
*.backup                      # Backup files
*~                           # Editor backup files
.*.swp                       # Hidden swap files
.*.swo                       # Hidden swap files (backup)
temp/                        # Temporary directory
tmp/                         # Temporary directory
.cache/                      # Cache directory
*.orig                       # Git merge conflict original files

# -----------------------------------------------------------------------------
# EDUCATIONAL AND LEARNING ARTIFACTS  
# -----------------------------------------------------------------------------
# Excludes educational artifacts, student work, and learning progress files.
# Learning artifacts are specific to individual students and should not be
# shared in the main repository to maintain educational integrity.

# Student Work and Progress
student-work/                 # Individual student work directory
exercises/*/solutions/        # Exercise solution directories
learning-notes/              # Personal learning notes directory
tutorial-progress/           # Tutorial progress tracking
workshop-*/                  # Workshop session directories

# Tutorial Backup Files
*.tutorial.bak              # Tutorial backup files
tutorial-backup-*           # Timestamped tutorial backups
student-notes.md            # Individual student notes
learning-progress.json      # Student progress tracking file
exercise-*.bak             # Exercise backup files

# Learning Environment Files
.repl_history              # Node.js REPL history file
tutorial-experiments/      # Student experimentation directory
practice-files/           # Practice implementation files
draft-solutions/          # Draft solution files

# -----------------------------------------------------------------------------
# PERSONAL DOCUMENTATION AND NOTES
# -----------------------------------------------------------------------------
# Excludes personal documentation, notes, and draft files that are not
# relevant to the shared tutorial project. These are individual developer
# artifacts that should remain personal.

notes/                       # Personal notes directory
personal-notes/             # Personal notes directory
README-personal.md          # Personal readme files
TODO-personal.md           # Personal todo files
NOTES.md                   # General notes file
scratch.md                 # Scratch pad files
draft-*                    # Draft documents
*.draft                    # Files marked as drafts
research/                  # Research materials directory
references/                # Reference materials directory

# -----------------------------------------------------------------------------
# PROJECT-WIDE BUILD AND DISTRIBUTION ARTIFACTS
# -----------------------------------------------------------------------------
# Excludes build outputs, distribution packages, and release artifacts at the
# project level. Build artifacts should be generated fresh and not stored in
# version control as they can be reproduced from source code.

dist/                      # Distribution build output
build/                     # Build output directory
out/                       # Output directory
target/                    # Maven/Gradle target directory
release/                   # Release build directory
releases/                  # Release archives directory

# Archive Files
*.tgz                      # Tar gzip archives
*.tar.gz                   # Tar gzip archives
*.zip                      # ZIP archives
*.rar                      # RAR archives
*.7z                       # 7-Zip archives
archives/                  # Archive storage directory

# Distribution Packages
*.dmg                      # macOS disk images
*.msi                      # Windows installer packages
*.deb                      # Debian packages
*.rpm                      # RPM packages

# -----------------------------------------------------------------------------
# INFRASTRUCTURE AND DEPLOYMENT ARTIFACTS
# -----------------------------------------------------------------------------
# Excludes infrastructure deployment artifacts, container logs, and generated
# deployment files. Infrastructure artifacts are generated during deployment
# and should not be version controlled to maintain clean repository state.

# Docker and Container Files
docker-compose.override.yml   # Docker Compose override file
docker-compose.*.yml         # Environment-specific Docker Compose files
!docker-compose.yml          # Keep main Docker Compose file
.docker/                     # Docker build context artifacts
*.dockerfile.backup          # Dockerfile backup files
container-logs/             # Container log files
*.container.log            # Individual container logs

# Deployment and Infrastructure State
deployment-logs/            # Deployment execution logs
deploy-*.log               # Deployment log files
infrastructure-state/      # Infrastructure state files
deployment-backup-*        # Deployment backup files
infrastructure-backup-*   # Infrastructure backup files

# Terraform (Infrastructure as Code)
terraform.tfstate*         # Terraform state files
.terraform/               # Terraform working directory
*.tfplan                  # Terraform execution plans
*.tfvars.local           # Local Terraform variable files

# Ansible (Configuration Management)
ansible-logs/             # Ansible execution logs
*.retry                   # Ansible retry files

# Kubernetes and Orchestration
*.kubeconfig             # Kubernetes configuration files
k8s-logs/               # Kubernetes logs

# Web Server and Proxy Logs
nginx-logs/             # Nginx log files
apache-logs/           # Apache log files
proxy-logs/           # Proxy server logs

# Monitoring and Observability
monitoring-data/        # Monitoring data files
metrics/               # Application metrics data
grafana-data/         # Grafana dashboard data
prometheus-data/      # Prometheus metrics data

# -----------------------------------------------------------------------------
# SECURITY AND SENSITIVE CONFIGURATION FILES
# -----------------------------------------------------------------------------
# Excludes sensitive configuration files, keys, and certificates. Sensitive
# files must never be committed to version control for security reasons and
# should be managed through secure configuration management systems.

# Environment and Configuration
.env                        # Base environment variables
.env.*                     # Environment-specific variables  
!.env.example             # Keep example environment file
!.env.template            # Keep environment template

# Security Credentials and Keys
secrets.*                  # Files containing secrets
private-key*              # Private key files
*.pem                     # PEM certificate/key files
*.key                     # Private key files
*.crt                     # Certificate files
*.cert                    # Certificate files
*.ca-bundle              # Certificate authority bundles
*.p12                    # PKCS#12 certificate files
*.pfx                    # Personal exchange certificate files

# Authentication and Authorization
auth-config.*            # Authentication configuration files
oauth-credentials.*      # OAuth credential files
jwt-secret*             # JSON Web Token secrets
api-keys.*              # API key configuration files
auth-tokens.*           # Authentication token files

# SSL/TLS and Security
ssl/                     # SSL certificate directory
tls/                     # TLS certificate directory
certs/                   # Certificate directory
security-config/         # Security configuration directory

# Production Configuration
config/production.*      # Production configuration files
prod-config.*           # Production configuration files

# -----------------------------------------------------------------------------
# DEVELOPMENT AND DEBUGGING ARTIFACTS
# -----------------------------------------------------------------------------
# Excludes development logs, debugging output, and performance profiling files.
# Development artifacts are temporary and specific to individual development
# sessions, making them unsuitable for version control.

# Application Logs
debug.log                # Debug log files
*.log                    # All log files
logs/                    # Application logs directory
log-*.txt               # Timestamped log files

# Process and Runtime Files
*.pid                    # Process ID files  
*.seed                   # Seed files for random generators
*.pid.lock              # Process ID lock files

# Debug and Profiling Output
debug-output-*          # Debug output files
profile-*               # Profiling output files
*.trace                 # Trace files
*.heapsnapshot         # V8 heap snapshots (if at root level)
*.cpuprofile           # CPU profiling data (if at root level)

# Memory Analysis
heapdump-*             # Heap dump files
memory-*.txt           # Memory analysis files

# -----------------------------------------------------------------------------
# GIT AND VERSION CONTROL ARTIFACTS
# -----------------------------------------------------------------------------
# Excludes Git-specific files and version control artifacts that are managed
# by the version control system and should not be explicitly tracked.

.git/                   # Git repository directory (usually auto-excluded)
*.orig                  # Git merge conflict originals
*.rej                   # Git patch rejection files  
*.patch                 # Patch files
.gitattributes.local   # Local git attributes
.mailmap.local         # Local mailmap file

# -----------------------------------------------------------------------------
# ARCHIVE AND COMPRESSED FILES
# -----------------------------------------------------------------------------
# Excludes compressed archives and binary distribution files. Archive files
# are typically not part of source code and can be large binary files that
# should not be version controlled.

*.7z                    # 7-Zip archives
*.dmg                   # macOS disk images
*.gz                    # Gzip compressed files
*.iso                   # ISO disk images
*.jar                   # Java archive files
*.rar                   # RAR archives
*.tar                   # Tar archives
*.zip                   # ZIP archives
*.bz2                   # Bzip2 compressed files
*.xz                    # XZ compressed files

# -----------------------------------------------------------------------------
# CROSS-PLATFORM DEVELOPMENT SUPPORT
# -----------------------------------------------------------------------------
# Additional patterns for cross-platform development compatibility across
# Windows, macOS, and Linux development environments.

# Windows Development
*.exe                   # Windows executables
*.msi                   # Windows installer files
*.bat                   # Windows batch files (excluding necessary ones)
*.cmd                   # Windows command files (excluding necessary ones)

# macOS Development  
*.app                   # macOS application bundles
*.pkg                   # macOS package files
.Spotlight-V100         # Spotlight index files
.fseventsd/            # File system events directory

# Linux Development
*.AppImage             # Linux AppImage files
*.deb                  # Debian package files
*.rpm                  # RedHat package files
*.snap                 # Snap package files

# -----------------------------------------------------------------------------
# COORDINATION NOTES AND MAINTENANCE GUIDELINES
# -----------------------------------------------------------------------------
# 
# This root .gitignore coordinates with:
# - src/backend/.gitignore: Handles Node.js specific patterns (node_modules, npm-debug.log, etc.)
# - src/backend/coverage/.gitignore: Handles test coverage reports and analysis
# 
# Maintenance Guidelines:
# - Review and update when adding new development tools or deployment methods
# - Test patterns across Windows, macOS, and Linux development environments  
# - Coordinate updates with backend-specific gitignore files
# - Document rationale for non-obvious exclusions
# - Keep educational value and cross-platform compatibility in mind
# 
# Educational Value:
# - Demonstrates comprehensive project-wide version control strategy
# - Shows coordination between multiple gitignore files in project structure
# - Illustrates security-conscious development practices
# - Teaches cross-platform development considerations
# - Provides examples of professional development environment setup
# 
# =============================================================================